var app = angular.module("FireFoxMarket", [ "ui.router", "LocalStorageModule" ]);

app.config(function($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {
    $urlRouterProvider.otherwise("/"), $locationProvider.html5Mode(!0), $stateProvider.state("home", {
        url: "/",
        templateUrl: "/templates/home.html"
    }), $stateProvider.state("AppNotFound", {
        url: "/app/notfound",
        templateUrl: "/templates/apps/404.html"
    }), $stateProvider.state("AppView", {
        url: "/app/:name",
        templateUrl: function() {
            return "/templates/apps/appview.html";
        },
        controller: "AppViewController"
    }), delete $httpProvider.defaults.headers.common["X-Requested-Width"];
}), app.controller("main", function($window, $rootScope, API, localStorageService) {
    if (localStorageService.get("loggedin")) {
        {
            localStorageService.get("loggedin");
        }
        $rootScope.loggedin = !0;
    }
    $rootScope.login = function() {}, $rootScope.loaded = function(delay) {
        delay = delay || 1, TweenMax.to(document.querySelector("#loader"), delay, {
            opacity: 0
        });
    };
}), app.factory("API", [ "Utils", "$http", "$q", "$timeout", function(Utils, $http, $q, $timeout) {
    function request(endpoint, parameters) {
        var deferred = $q.defer();
        return console.log("Need to run : " + endpoint), $timeout(function() {
            $http({
                method: "GET",
                url: "/marketplaceAPI/" + endpoint + " " + parameters
            }).success(function(data, status, headers, config) {
                data && deferred.resolve(data, status, headers, config);
            }).error(function(data, status, headers, config) {
                deferred.resolve(data, status, headers, config);
            });
        }, 100), deferred.promise;
    }
    return {
        request: request
    };
} ]), app.factory("keys", function() {
    return {
        SHIFT: 16,
        CONTROL: 17,
        ALT: 18,
        PAUSE: 19,
        CAPS_LOCK: 20,
        ESCAPE: 27,
        ENTER: 13,
        PAGE_UP: 33,
        PAGE_DOWN: 34,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        HOME: 36,
        END: 35,
        COMMAND: 91,
        WINDOWS_RIGHT: 92,
        COMMAND_RIGHT: 93,
        WINDOWS_LEFT_OPERA: 219,
        WINDOWS_RIGHT_OPERA: 220,
        APPLE: 24
    };
}), app.factory("Utils", function() {
    function baseurl(url) {
        return url.split("?")[0];
    }
    function encodeURIComponent(uri) {
        return window.encodeURIComponent(uri).replace(/%20/g, "+");
    }
    function decodeURIComponent(uri) {
        return window.decodeURIComponent(uri.replace(/\+/g, " "));
    }
    function urlparams(url, kwargs) {
        return baseurl(url) + "?" + urlencode(_.defaults(kwargs, querystring(url)));
    }
    return {
        baseurl: baseurl,
        encodeURIComponent: encodeURIComponent,
        decodeURIComponent: decodeURIComponent,
        urlparams: urlparams
    };
}), app.directive("footer", function() {
    return {
        templateUrl: "templates/footer.html",
        controller: function() {},
        link: function() {}
    };
}), app.directive("header", function() {
    return {
        templateUrl: "templates/header.html",
        controller: function() {},
        link: function() {}
    };
}), app.directive("login", [ "$http", function($http) {
    var currentUser = null;
    return {
        templateUrl: "/templates/login.html",
        controller: function() {},
        link: function($scope) {
            $scope.login = function() {
                navigator.id.request();
            }, $scope.logout = function() {
                navigator.id.logout();
            }, navigator.id.watch({
                loggedInUser: currentUser,
                onlogin: function(assertation) {
                    $http.post("/loginassert", {
                        assertation: assertation,
                        audience: window.location.href
                    }).success(function(data) {
                        console.log(data);
                    }).error(function(data) {
                        console.log("issue with verification process"), console.log(data);
                    });
                },
                onlogout: function() {
                    currentUser = null;
                }
            });
        }
    };
} ]), app.controller("AppViewController", [ "$window", "API", "$scope", "$rootScope", function($window, API, $scope, $rootScope) {
    var id = $window.location.href.split("/");
    id = id[id.length - 1], API.request("app_detail", id).then(function(data) {
        $scope.author = data.author, $scope.categories = data.categories, $scope.content_ratings = data.content_ratings, 
        $scope.name = data.name[navigator.language];
        for (var previews = [], i = 0; i < data.previews.length; ++i) {
            var preview = {
                image: data.previews[i].image_url,
                thumb: data.previews[i].thumbnail_url
            };
            previews.push(preview);
        }
        $scope.previews = previews, $scope.privacy = "http://marketplace.firefox.com" + data.privacy_policy, 
        $scope.support_email = data.support_email[navigator.language], $scope.support_url = data.support_url[navigator.language], 
        $scope.tags = data.tags, $scope.versions = data.versions, $rootScope.loaded();
    });
} ]), app.controller("myapps", function() {
    navigator.mozApps.getInstalled();
}), app.controller("home", [ "$rootScope", "API", "$scope", function($rootScope, API, $scope) {
    API.request("featured").then(function(data) {
        for (var apps = [], i = 0; i < data.objects.length; ++i) {
            for (var obj = (data.objects[i].name["en-US"], {
                icon: data.objects[i].icons[64],
                name: data.objects[i].name["en-US"],
                id: data.objects[i].id,
                author: data.objects[i].author
            }), a = 0; a < data.objects[i].device_types; ++a) "desktop" === data.objects[i].device_types[a] && (obj.device = "desktop");
            apps.push(obj);
        }
        $scope.featured_apps = apps, $rootScope.loaded();
    }), API.request("categories").then(function(data) {
        $scope.categories = data.objects;
    });
} ]);