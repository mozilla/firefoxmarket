var app = angular.module("siberia", [ "ui.router" ]);

app.config(function() {}), app.controller("main", function($window) {
    var current_height = window.innerHeight, scrollPosition = 0, scrolldirection = "down", hasAnimated = !1;
    $window.addEventListener("resize", function() {
        current_height = window.innerHeight;
    }), console.log(current_height), $window.addEventListener("scroll", function() {
        var pos = window.scrollY, nav = document.querySelector("header nav ul"), logo = document.querySelector("#logo img");
        pos > scrollPosition ? scrolldirection = "down" : scrollPosition > pos && (scrolldirection = "up"), 
        null !== nav && (pos > current_height - 200 ? ("down" === scrolldirection && hasAnimated === !1 && TweenMax.to(nav.children, .5, {
            css: {
                transform: "translateY(-100px)"
            },
            onComplete: function() {
                nav.className = "alt-nav", hasAnimated = !0, TweenMax.to(nav.children, 1, {
                    css: {
                        transform: "translateY(0px)"
                    }
                });
            }
        }), logo.src = "/img/darkLogo.svg", logo.className = "alt") : 1e3 > pos && (nav.className = "", 
        logo.src = "/img/logo.svg", logo.className = "", hasAnimated = !1)), scrollPosition = pos;
    });
}), app.factory("backgroundResize", [ "$window", function($window) {
    var el = document.querySelector("#mountains"), API = (el.style.backgroundPosition, 
    {
        resize: function() {
            $window.addEventListener("resize", function() {
                API.resizeWindow();
            });
        },
        resizeWindow: function() {
            if (window.innerWidth < 1200) {
                el.style.backgroundSize = "230%";
                var style = window.getComputedStyle(el);
                el.style.backgroundPosition = parseInt(style.width) / 2 * -1 + "px 0px";
            } else {
                var style = window.getComputedStyle(el);
                el.style.backgroundSize = "200%", el.style.backgroundPosition = parseInt(style.width) / 2 * -1 + "px 0px";
            }
        }
    });
    return API.resizeWindow(), API;
} ]), app.filter("parseHTML", function($sce) {
    return function(val) {
        return $sce.trustAsHtml(val);
    };
}), app.directive("make", function($window, $http) {
    var works = [];
    return {
        controller: function($scope) {
            $http({
                method: "GET",
                url: "/manifest.json"
            }).success(function(data) {
                $scope.items = data;
            }).error(function() {
                console.error('trouble getting "Make" page list');
            });
        },
        link: function($scope) {
            function buildCaseStudies() {
                $scope.studies = works;
            }
            var s = setInterval(function() {
                works.length > 0 && (buildCaseStudies(), clearInterval(s));
            });
        }
    };
});